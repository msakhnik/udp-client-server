+-1. Огляд протоколу  UDP (+) 15хв, 1год
	+Проста структура. див. схему.
	-Подумати над порядковим номером на початку даних.
	+Читати Стівенса - розділ 8, розділ 22.5.
+-2. Аналіз tcpdump (30хв)
	+Навчитись користуватись (15хв)
		Крута штука для відладки і мережевого обміну. lo для локалхоста.
	+Налаштувати віртуальну машину для тестування (30хв)
	-див акули
	
+-3. Аналіз libcaps
	+розібратись з pcap бібліотекою (30 хв)
	+ написати сніфер на основі (http://rus-linux.net/MyLDP/algol/libpcap.html) (20 хв)
	- придумати навіщо дозволено використовувати сорси, якщо можна це робити на стороні клієнта і відправляти серверу статистику спроб.
	+ Добавити сніфер на север.
	+ Добавити можливість виявлення повторно надісланих пакетів
	+ добавити getopt
	- Добавити можливість запису в лог-файл

+-4. Можливість використання IPv4/IPv6 socket.
	- аналіз інформації (15хв)
		На перший погляд потрібно використовувати в main при створенні сокета. Там різні FLAGS.
	- Перечитати Стівенсона.
+-5. Аналіз команди ifconfig
	- Продумати як використати, і навіщо вона дана в умові задачі

+-6. Написання клієнт-серверної програми
	+-6.1. Написання простої клієнт-серверної програми з udp (+) 2 год, 1 год,
		+6.1.1. Добавити можливість добавляти порядковий номер перед пакетом. Див Стівенсон 22.5 (1год)(1год)
		+6.2.2. Добавити можливість тайм ауту (без rtt) (20 хв)
		-6.3.3. Добавити посилання повідомлення з кількістю спроб для статистики.
	6.2. -Відмова від попередньої реалізації. Не забезпечує надійність
	6.3. -Розробка бібліотеки на основі TCP. Для виконання трьох-рівневого рукостискання.




Література:
http://rus-linux.net/MyLDP/algol/libpcap.html
http://www.rsdn.ru/article/unix/sockets.xml
http://www.tenouk.com/Module41a.html
